config { tags: ["process"],
         type: "incremental",
          bigquery: {
            partitionBy: "date",
            clusterBy: ["account_number"]
          },
         description: "This table is a Bigquery Table populated from a BigLake table",
         columns:{
              transaction_uuid: "Transaction ID as defined in the source system.",
              account_number: "The account number as defined in the source system."
              date: "The transaction date as defined in the source system."
              withdrawal_amount: "The withdrawal amount as defined in the source system."
              deposit_amount: "The deposit amount as defined in the source system."
              balance: "The balance as defined in the source system."
              successful_operation: "Boolean for operation success as defined in the source system."
        },
        schema: `${dataform.projectConfig.vars.dataset_id_curated}`,
        database: `${dataform.projectConfig.vars.dataset_projectid_curated}`,
        name: "curated_transactions"
      }
SELECT
  transaction_uuid,
  account_number,
  date,
  withdrawal_amount,
  deposit_amount,
  balance,
  successful_operation,
  row_number() over (partition by account_id order by date desc) as transaction_rank,
  row_number() over (partition by account_id order by date asc) as transaction_reverse_rank
FROM
   pramodrao-pso-hackathon:aef_landing_sample_dataset.raw_transactions --`${dataform.projectConfig.vars.dataset_projectid_landing}.${dataform.projectConfig.vars.dataset_id_landing}`.raw_transactions
WHERE successful_operation

${when(incremental(), `WHERE date = ${dataform.projectConfig.vars.start_date}`)}